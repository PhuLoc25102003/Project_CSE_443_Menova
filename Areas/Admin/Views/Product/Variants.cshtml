@model Menova.Models.Product
@{
    ViewData["Title"] = "Quản lý biến thể sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    
    var sizes = ViewBag.Sizes as List<Menova.Models.Size>;
    var colors = ViewBag.Colors as List<Menova.Models.Color>;
    
    // Phân trang
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
    var totalItems = ViewBag.TotalItems ?? 0;
}

@section Styles {
    <link rel="stylesheet" href="~/css/product-variants.css" />
    <link rel="stylesheet" href="~/css/admin/product-details.css" />
    <style>
        .product-details-page .header-content h1 {
            font-size: 1.8rem;
        }
        
        .card-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
            color: white;
            padding: 1rem;
        }
        
        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            border: none;
            margin-bottom: 1.5rem;
        }
        
        /* Fix cực mạnh cho footer và responsive */
        html, body {
            height: auto !important;
            min-height: 100% !important;
            position: relative !important;
            overflow-x: hidden !important;
        }
        
        .container-fluid.py-4 {
            padding-bottom: 100px !important;
            min-height: 100vh !important;
            width: 100% !important;
            overflow: visible !important;
            box-sizing: border-box !important;
        }
        
        /* Fix cho form input container */
        .row.g-3 {
            margin-left: -10px !important;
            margin-right: -10px !important;
            width: 100% !important;
            max-width: 100% !important;
            box-sizing: border-box !important;
            display: flex !important;
            flex-wrap: wrap !important;
        }
        
        .row.g-3 .col-md-3, .row.g-3 .col-12 {
            overflow: visible !important;
            padding: 0 10px !important;
            box-sizing: border-box !important;
            display: block !important;
            width: 100% !important; /* Mặc định full width cho mobile */
        }
        
        @@media (min-width: 768px) {
            .row.g-3 .col-md-3 {
                width: 25% !important; /* Đúng 25% cho màn hình lớn */
            }
        }
        
        /* Fix cho các input và select */
        .form-control, .form-select, input[type="text"], input[type="number"], select {
            width: 100% !important;
            max-width: 100% !important;
            box-sizing: border-box !important;
            overflow: hidden !important;
            margin: 0 !important;
        }
        
        /* Custom input styles */
        .product-input {
            padding: 10px 15px;
            border: 1px solid #ced4da;
            border-radius: 0.25rem;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }
        
        .product-input:focus {
            border-color: #80bdff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
        
        /* Fix cho input trong bảng */
        .table .input-group {
            max-width: 100% !important;
            width: 100% !important;
            box-sizing: border-box !important;
        }
        
        .table .input-group .form-control {
            min-width: 50px !important;
            flex: 1 !important;
        }
        
        /* Đảm bảo form select luôn đủ rộng */
        select.form-select {
            width: 100% !important;
        }
        
        /* Fix cho color preview */
        #colorPreview {
            width: 35px !important;
            height: 35px !important;
            border-radius: 4px !important;
            border: 1px solid #ddd !important;
            display: inline-block !important;
            vertical-align: middle !important;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1) !important;
            transition: all 0.2s ease !important;
        }
        
        /* Cải thiện form label alignment */
        .form-label {
            font-weight: 500;
            margin-bottom: 0.5rem;
            display: block;
        }
        
        /* Giảm khoảng cách giữa các form item */
        .Variant-input-item {
            margin-bottom: 15px;
        }
        
        /* Đảm bảo các form card không vượt quá khung */
        .card.variant-form {
            overflow: visible !important;
            width: 100% !important;
            max-width: 100% !important;
            height: auto !important;
            min-height: 520px !important; /* Tăng chiều cao thêm */
        }
        
        /* Cải thiện giao diện thông tin sản phẩm */
        .product-info-card {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }
        
        .product-image-container {
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #fff;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
            height: 100%;
            padding: 10px;
        }
        
        .product-details {
            display: flex;
            flex-direction: column;
            height: 100%;
        }
        
        .product-title {
            font-weight: 700;
            font-size: 1.5rem;
            color: #333;
            margin-bottom: 5px;
        }
        
        .product-sku {
            color: #6c757d;
            margin-bottom: 15px;
            font-size: 0.9rem;
        }
        
        .product-category-badge {
            margin-right: 10px;
        }
        
        .product-price-container {
            display: flex;
            align-items: center;
            margin-top: 10px;
        }
        
        .product-price {
            font-size: 1.2rem;
            font-weight: 600;
            color: #333;
        }
        
        .product-discount-price {
            font-size: 1.2rem;
            font-weight: 600;
            color: #dc3545;
            margin-left: 10px;
        }
        
        /* Cải thiện bố cục trang */
        .variant-management-container {
            display: flex;
            flex-wrap: wrap;
            margin: 0 -15px;
        }
        
        .add-variant-container {
            padding: 15px;
            width: 100%;
            box-sizing: border-box;
        }
        
        .variants-list-container {
            padding: 15px;
            width: 100%;
            box-sizing: border-box;
        }
        
        /* Responsive cho layout 2 cột */
        @@media (min-width: 992px) {
            .add-variant-container {
                width: 30%; /* Đảm bảo form chiếm 30% */
            }
            
            .variants-list-container {
                width: 70%; /* Đảm bảo danh sách chiếm 70% */
            }
        }
        
        /* Tăng chiều cao cho card */
        .add-variant-container .card,
        .variants-list-container .card {
            height: 100%;
            min-height: 550px; /* Tăng chiều cao thêm để đảm bảo đủ chỗ cho màu đã chọn và các elements khác */
        }
        
        .variants-list-container .card-body {
            display: flex;
            flex-direction: column;
            height: 100%;
            padding: 20px; /* Đảm bảo padding đủ */
            min-height: 450px; /* Đảm bảo chiều cao tối thiểu cho card body */
        }
        
        .table-responsive {
            flex-grow: 1;
            overflow-y: auto;
            overflow-x: auto;
            margin-bottom: 20px;
            min-height: 300px; /* Đảm bảo chiều cao tối thiểu cho bảng khi ít variants */
        }
        
        .add-variant-form {
            display: flex;
            flex-direction: column;
            height: 100%;
            padding-bottom: 0;
        }
        
        .form-fields-container {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            gap: 12px;
            margin-bottom: 15px;
        }
        
        .form-actions {
            margin-top: 5px;
            position: relative;
            padding: 0;
        }
        
        .Variant-input-item {
            margin-bottom: 10px;
        }
        
        .Variant-input-item label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #495057;
        }
        
        .Variant-input-item .form-select,
        .Variant-input-item .form-control {
            width: 100%;
            padding: 10px 15px;
            border: 1px solid #ced4da;
            border-radius: 0.25rem;
            background-color: #fff;
        }
        
        /* Hiển thị màu đã chọn */
        .color-selected-container {
            margin-top: 10px;
            padding: 12px;
            background-color: #f8f9fa;
            border-radius: 8px;
            border: 1px solid #e9ecef;
            height: auto;
            overflow: visible;
            min-height: 50px;
            display: flex;
            align-items: center;
        }
        
        /* Style cho nút */
        .btn {
            border-radius: 5px;
            padding: 0.5rem 1rem;
            font-weight: 500;
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
        }
        
        .btn-primary:hover {
            background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
        }
        
        /* Cải thiện bảng biến thể */
        .variants-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            table-layout: fixed; /* Giúp cố định chiều rộng cột */
        }
        
        .variants-table th {
            background-color: #f8f9fa;
            padding: 12px;
            font-weight: 600;
            text-align: left;
            border-bottom: 2px solid #dee2e6;
        }
        
        .variants-table td {
            padding: 12px;
            vertical-align: middle;
            border-bottom: 1px solid #e9ecef;
        }
        
        .variants-table tr:hover {
            background-color: rgba(0,0,0,0.02);
        }
        
        .color-option {
            display: inline-block;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            border: 1px solid #ddd;
        }
        
        .validation-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
        
        /* Phân trang */
        .pagination-wrapper {
            margin-top: auto;
            width: 100%;
            padding-top: 8px;
            border-top: 1px solid #e9ecef;
            position: relative;
            height: 80px; /* Chiều cao cố định cho phân trang */
        }
        
        /* Tạo phần tử giữ chỗ cho pagination khi không có */
        .pagination-placeholder {
            height: 80px;
            width: 100%;
            margin-top: auto;
        }
        
        .pagination-container {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            padding-bottom: 10px; /* Thêm padding dưới cùng */
        }
        
        .pagination {
            display: flex;
            list-style: none;
            padding: 0;
            margin: 0;
        }
        
        .pagination li {
            margin: 0 5px;
        }
        
        .pagination li a,
        .pagination li span {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            text-decoration: none;
            background-color: #f8f9fa;
            color: #6c757d;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .pagination li a:hover {
            background-color: #e9ecef;
            color: #495057;
        }
        
        .pagination li.active span {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        .pagination-info {
            margin-top: 10px;
            text-align: center;
            color: #6c757d;
            font-size: 0.9rem;
        }
        
        /* Improve status toggle styling */
        .form-check.form-switch {
            display: inline-flex;
            align-items: center;
            width: auto;
            padding-left: 0;
        }
        
        .form-check-input {
            margin-right: 8px;
            float: none;
            margin-left: 0;
        }
        
        .form-check-label {
            display: inline-block;
            margin-bottom: 0;
            vertical-align: middle;
        }
    </style>
}

<div class="product-details-page">
    <div class="page-header">
        <div class="header-content">
            <h1>Quản lý biến thể sản phẩm</h1>
        </div>
        <div class="page-actions">
            <a asp-action="Index" asp-route-id="@Model.ProductId" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-2"></i> Quay lại danh sách
            </a>
        </div>
    </div>

    <div class="main-card">
        <!-- Product Summary -->
        <div class="product-info-card">
            <div class="row">
                <div class="col-md-3 col-sm-4 col-12 mb-3 mb-md-0">
                    <div class="product-image-container">
                        @if (!string.IsNullOrEmpty(Model.ImageUrl))
                        {
                            <img src="@Model.ImageUrl" alt="@Model.Name" class="img-fluid rounded" style="max-height: 180px;">
                        }
                        else if (Model.Images != null && Model.Images.Any())
                        {
                            <img src="@Model.Images.FirstOrDefault()?.ImageUrl" alt="@Model.Name" class="img-fluid rounded" style="max-height: 180px;">
                        }
                        else
                        {
                            <div class="text-center py-4">
                                <i class="fas fa-image fa-4x text-muted"></i>
                                <p class="mt-2 mb-0 text-muted">Không có hình ảnh</p>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-9 col-sm-8 col-12">
                    <div class="product-details">
                        <h3 class="product-title">@Model.Name</h3>
                        <div class="product-sku">Mã sản phẩm: @Model.SKU</div>
                        
                        <div class="d-flex flex-wrap align-items-center mb-3">
                            @if (Model.Category != null)
                            {
                                <span class="badge bg-primary product-category-badge px-3 py-2">
                                    <i class="fas fa-tag me-1"></i> @Model.Category.Name
                                </span>
                            }
                            <span class="badge @(Model.IsActive ? "bg-success" : "bg-danger") px-3 py-2">
                                <i class="fas @(Model.IsActive ? "fa-eye" : "fa-eye-slash") me-1"></i>
                                @(Model.IsActive ? "Đang hiển thị" : "Đã ẩn")
                            </span>
                        </div>
                        
                        <div class="product-price-container">
                            <div class="me-4">
                                <div class="text-muted mb-1">Giá bán:</div>
                                <div class="product-price">@Model.Price.ToString("N0") đ</div>
                            </div>
                            @if (Model.DiscountPrice > 0)
                            {
                                <div>
                                    <div class="text-muted mb-1">Giá khuyến mãi:</div>
                                    <div class="product-discount-price">@Model.DiscountPrice.ToString("N0") đ</div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Variant Management - Layout 2 cột -->
        <div class="variant-management-container">
            <!-- Phần thêm biến thể - Bên trái -->
            <div class="add-variant-container">
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0"><i class="fas fa-plus-circle me-2"></i> Thêm biến thể mới</h6>
                    </div>
                    <div class="card-body">
                        <form id="addVariantForm" method="post" asp-action="AddVariant" class="add-variant-form needs-validation" novalidate>
                            <input type="hidden" name="ProductId" value="@Model.ProductId" />
                            
                            <div class="form-fields-container">
                                <div class="Variant-input-item">
                                    <label class="form-label">Kích thước <span class="text-danger">*</span></label>
                                    <select name="SizeId" class="form-select" required>
                                        <option value="">-- Chọn kích thước --</option>
                                        @if (sizes != null)
                                        {
                                            foreach (var size in sizes)
                                            {
                                                <option value="@size.SizeId">@size.Name</option>
                                            }
                                        }
                                    </select>
                                    <div class="validation-message" data-valmsg-for="SizeId" data-valmsg-replace="true"></div>
                                </div>
                                
                                <div class="Variant-input-item">
                                    <div class="row">
                                        <div class="col-6">
                                            <label class="form-label">Màu sắc <span class="text-danger">*</span></label>
                                              <select id="colorSelect" name="ColorId" class="form-select" required>
                                                <option value="">-- Chọn màu sắc --</option>
                                                @if (colors != null)
                                                    {
                                                        foreach (var color in colors)
                                                        {
                                                            <option value="@color.ColorId" data-color="@color.ColorCode">@color.Name</option>
                                                        }
                                                    }
                                                </select>
                                            <div class="validation-message" data-valmsg-for="ColorId" data-valmsg-replace="true"></div>
                                        </div>
                                        
                                        <div class="col-6">
                                            <label class="form-label">Màu đã chọn</label>
                                            <div class="d-flex align-items-center">
                                                <div id="colorPreview" class="d-inline-block" style="width: 35px; height: 35px; border-radius: 4px; border: 1px solid #ddd; background-color: transparent;"></div>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="Variant-input-item">
                                    <label class="form-label">Số lượng <span class="text-danger">*</span></label>
                                    <input type="number" name="StockQuantity" class="form-control" min="0" required />
                                    <div class="validation-message" data-valmsg-for="StockQuantity" data-valmsg-replace="true"></div>
                                </div>
                                
                                <div class="Variant-input-item">
                                    <label class="form-label">Trạng thái</label>
                                    <div class="form-check form-switch">
                                        <input name="IsActive" class="form-check-input" type="checkbox" checked value="true">
                                        <!-- Hidden field to ensure IsActive is sent as false when checkbox is unchecked -->
                                        <input name="IsActive" type="hidden" value="false">
                                        <label class="form-check-label">Hiển thị biến thể</label>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-actions mt-2">
                                <button type="submit" class="btn btn-primary w-100 py-2">
                                    <i class="fas fa-plus-circle me-2"></i> Thêm biến thể
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- Phần danh sách biến thể - Bên phải -->
            <div class="variants-list-container">
                <div class="card">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="fas fa-list me-2"></i> Danh sách biến thể
                            <span class="badge bg-info ms-2">@totalItems</span>
                        </h6>
                    </div>
                    <div class="card-body">
                        @if (Model.ProductVariants == null || !Model.ProductVariants.Any())
                        {
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle me-2"></i>
                                Sản phẩm này chưa có biến thể nào. Vui lòng thêm biến thể sử dụng mẫu bên trái.
                            </div>
                            <div class="table-responsive" style="min-height: 300px;">
                                <!-- Phần tử giữ chỗ khi không có biến thể -->
                            </div>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table variants-table">
                                    <thead>
                                        <tr>
                                            <th style="width: 50px">ID</th>
                                            <th style="width: 120px">Kích thước</th>
                                            <th style="width: 150px">Màu sắc</th>
                                            <th style="width: 130px">Tồn kho</th>
                                            <th style="width: 140px">Trạng thái</th>
                                            <th style="width: 120px">Thao tác</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var variant in Model.ProductVariants)
                                        {
                                            <tr>
                                                <td class="text-center">@variant.ProductVariantId</td>
                                                <td>
                                                    <span class="badge bg-info px-3 py-2 fs-6 w-100">@variant.Size?.Name</span>
                                                </td>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        @if (!string.IsNullOrEmpty(variant.Color?.ColorCode))
                                                        {
                                                            <div class="color-option me-2" style="background-color: @variant.Color.ColorCode;"></div>
                                                        }
                                                        @variant.Color?.Name
                                                    </div>
                                                </td>
                                                <td>
                                                    <form method="post" asp-action="UpdateVariantStock" class="d-flex align-items-center">
                                                        <input type="hidden" name="ProductVariantId" value="@variant.ProductVariantId" />
                                                        <div class="input-group input-group-sm">
                                                            <input type="number" name="StockQuantity" value="@variant.StockQuantity" 
                                                                class="form-control" min="0" />
                                                            <button type="submit" class="btn btn-outline-primary" title="Cập nhật tồn kho">
                                                                <i class="fas fa-save"></i>
                                                            </button>
                                                        </div>
                                                    </form>
                                                </td>
                                                <td>
                                                    <form method="post" asp-action="ToggleVariantStatus">
                                                        <input type="hidden" name="ProductVariantId" value="@variant.ProductVariantId" />
                                                        <button type="submit" class="btn btn-sm @(variant.IsActive ? "btn-success" : "btn-secondary") w-100" 
                                                                title="@(variant.IsActive ? "Ẩn biến thể" : "Hiển thị biến thể")">
                                                            <i class="fas @(variant.IsActive ? "fa-eye" : "fa-eye-slash") me-2"></i>
                                                            @(variant.IsActive ? "Hiển thị" : "Ẩn")
                                                        </button>
                                                    </form>
                                                </td>
                                                <td>
                                                    <form method="post" asp-action="DeleteVariant">
                                                        <input type="hidden" name="ProductVariantId" value="@variant.ProductVariantId" />
                                                        <button type="submit" class="btn btn-danger btn-sm w-100">
                                                            <i class="fas fa-trash-alt me-2"></i> Xóa
                                                        </button>
                                                    </form>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            
                            @if (totalPages > 1)
                            {
                                <div class="pagination-wrapper">
                                    <div class="pagination-container">
                                        <ul class="pagination">
                                            @if (currentPage > 1)
                                            {
                                                <li>
                                                    <a href="@Url.Action("Variants", "Product", new { area = "Admin", id = Model.ProductId, page = currentPage - 1 })" aria-label="Previous">
                                                        <i class="fas fa-chevron-left"></i>
                                                    </a>
                                                </li>
                                            }
                                            
                                            @for (int i = 1; i <= totalPages; i++)
                                            {
                                                <li class="@(i == currentPage ? "active" : "")">
                                                    @if (i == currentPage)
                                                    {
                                                        <span>@i</span>
                                                    }
                                                    else
                                                    {
                                                        <a href="@Url.Action("Variants", "Product", new { area = "Admin", id = Model.ProductId, page = i })">@i</a>
                                                    }
                                                </li>
                                            }
                                            
                                            @if (currentPage < totalPages)
                                            {
                                                <li>
                                                    <a href="@Url.Action("Variants", "Product", new { area = "Admin", id = Model.ProductId, page = currentPage + 1 })" aria-label="Next">
                                                        <i class="fas fa-chevron-right"></i>
                                                    </a>
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <!-- Phần tử giữ chỗ cho phân trang khi không cần hiển thị -->
                                <div class="pagination-placeholder"></div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle color selection
            const colorSelect = document.getElementById('colorSelect');
            const colorPreview = document.getElementById('colorPreview');
            const colorName = document.getElementById('colorName');
            
            if (colorSelect && colorPreview) {
                colorSelect.addEventListener('change', function() {
                    const selectedOption = this.options[this.selectedIndex];
                    const colorCode = selectedOption.getAttribute('data-color');
                    const selectedColorName = selectedOption.text;
                    
                    if (colorCode) {
                        colorPreview.style.backgroundColor = colorCode;
                        colorName.textContent = selectedColorName;
                    } else {
                        colorPreview.style.backgroundColor = 'transparent';
                        colorName.textContent = 'Chưa chọn màu';
                    }
                });
            }
            
            // Enhance form validation
            const addVariantForm = document.getElementById('addVariantForm');
            if (addVariantForm) {
                addVariantForm.addEventListener('submit', function(event) {
                    if (!this.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    this.classList.add('was-validated');
                });
            }
        });
    </script>
} 